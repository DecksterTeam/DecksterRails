<div id="<%= "#{chart_configs[:id]}_wrapper" %>"></div>
<script>
    $(document).ready(function () {
        var diameter = 200,
                format = d3.format(",d"),
                color = d3.scale.category20c();

        var bubble = d3.layout.pack()
                .sort(null)
                .size([<%= chart_configs[:width] %>, <%= chart_configs[:height] %>])
                .padding(1.5);

        var svg = d3.select("#<%= "#{chart_configs[:id]}_wrapper" %>").append("svg")
                .attr("width", <%= chart_configs[:width] %>)
                .attr("height", <%= chart_configs[:height] %>)
                .attr("class", "bubble");

        d3.json('<%= chart_configs[:data_url] %>', function (error, root) {
            var node = svg.selectAll(".node")
                    .data(bubble.nodes(classes(root))
                            .filter(function (d) {
                                return !d.children;
                            }))
                    .enter().append("g")
                    .attr("class", "node")
                    .attr("transform", function (d) {
                        return "translate(" + d.x + "," + d.y + ")";
                    });

            node.append("title")
                    .text(function (d) {
                        return d.className + ": " + format(d.value);
                    });

            node.append("circle")
                    .attr("r", function (d) {
                        return d.r;
                    })
                    .style("fill", function (d) {
                        return color(d.packageName);
                    });

            node.append("text")
                    .attr("dy", ".3em")
                    .style("text-anchor", "middle")
                    .text(function (d) {
                        return d.className.substring(0, d.r / 3);
                    });
        });

        // Returns a flattened hierarchy containing all leaf nodes under the root.
        function classes(root) {
            var classes = [];

            function recurse(name, node) {
                if (node.children) node.children.forEach(function (child) {
                    recurse(node.name, child);
                });
                else classes.push({packageName: name, className: node.name, value: node.size});
            }

            recurse(null, root);
            return {children: classes};
        }

        d3.select(self.frameElement).style("height", diameter + "px");
    });
</script>